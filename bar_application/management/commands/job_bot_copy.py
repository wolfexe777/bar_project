import decimal
from django.core.management.base import BaseCommand
from django.conf import settings
import telegram
import os
from telegram import KeyboardButton, ReplyKeyboardMarkup, ReplyKeyboardRemove, InlineKeyboardButton, InlineKeyboardMarkup
from ...models import JobProfile, UserProfile
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters
from django.core.exceptions import ObjectDoesNotExist
from telegram.utils.request import Request
import re
from datetime import datetime
from .start_keyboard import start_job_keyboard


def start_job(update, context):
    user = update.effective_user
    user_id = user.id
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    try:
        job_profile = JobProfile.objects.get(external_id=user_id)
        context.bot.send_message(chat_id=update.effective_chat.id,
                                 text='–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!')
    except JobProfile.DoesNotExist:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
        context.bot.send_message(chat_id=update.effective_chat.id, text='–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞',
                                 reply_markup=ReplyKeyboardRemove(remove_keyboard=True))
        context.bot.send_message(chat_id=update.effective_chat.id, text='–î–ª—è —ç—Ç–æ–≥–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "üì≤ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä"', reply_markup=ReplyKeyboardMarkup([[KeyboardButton('üì≤ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä', request_contact=True)]], resize_keyboard=True, one_time_keyboard=True))
        return

    keyboard = [[KeyboardButton('üî≥ –û—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞—Ç—å QR-–∫–æ–¥'),KeyboardButton('üëÜ –í–≤–µ—Å—Ç–∏ ID –∫–ª–∏–µ–Ω—Ç–∞')], [KeyboardButton('üìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è')]]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    context.bot.send_message(chat_id=update.effective_chat.id,text='–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ ‚§µÔ∏è:', reply_markup=reply_markup)


def handle_job_phone_number(update, context):
    user = update.effective_user
    user_id = user.id
    phone_number = update.effective_message.contact.phone_number

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    try:
        job_profile = JobProfile.objects.get(external_id=user_id)
        context.bot.send_message(chat_id=update.effective_chat.id, text='üü¢ –í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!')
    except JobProfile.DoesNotExist:
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        job_profile = JobProfile.objects.create(external_id=user_id, phone_number=phone_number)
        job_profile.save()

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–∞–±–æ—Ç–Ω–∏–∫–µ
        context.bot.send_message(chat_id=update.effective_chat.id, text='‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!')
        context.bot.send_message(chat_id=update.effective_chat.id, text=f'–í–∞—à ID: {job_profile.external_id}', reply_markup=ReplyKeyboardRemove(remove_keyboard=True))
        start_job_keyboard(update, context)

def scan_code(update, context):
    button_text = 'üî≥ –û—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞—Ç—å QR-–∫–æ–¥'
    button_url = 'https://www.online-qr-scanner.com/'

    keyboard = [[InlineKeyboardButton(button_text, url=button_url)]]
    reply_markup = InlineKeyboardMarkup(keyboard)

    update.message.reply_text('–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å —Å–∫–∞–Ω–µ—Ä QR-–∫–æ–¥–æ–≤:', reply_markup=reply_markup)

def add_menu_total_button(update, context):
    keyboard = [[KeyboardButton('‚ùå –£–¥–∞–ª–∏—Ç—å —Å—É–º–º—É —Ç–µ–∫—É—â–µ–≥–æ –∑–∞–∫–∞–∑–∞')]]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    context.bot.send_message(chat_id=update.effective_chat.id, text='–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ ID –∫–ª–∏–µ–Ω—Ç–∞.', reply_markup=reply_markup)
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –æ–∂–∏–¥–∞–Ω–∏—è ID –∫–ª–∏–µ–Ω—Ç–∞
    context.user_data['waiting_for_id'] = True

def handle_menu_total(update, context):
    if update.message.text == '‚ùå –£–¥–∞–ª–∏—Ç—å —Å—É–º–º—É —Ç–µ–∫—É—â–µ–≥–æ –∑–∞–∫–∞–∑–∞':
        user_profile = context.user_data.get('user_profile')
        if user_profile:
            # –í–æ–∑–≤—Ä–∞—Ç —Å—É–º–º—ã –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –º–µ–Ω—é –≤ —Ç–µ–∫—É—â—É—é —Å—É–º–º—É –º–µ–Ω—é
            user_profile.total_spent = user_profile.total_spent - decimal.Decimal(user_profile.menu_total)
            user_profile.menu_total = 0
            user_profile.save()
            update.message.reply_text(f'‚úÖ –°—É–º–º–∞ —Ç–µ–∫—É—â–µ–≥–æ –∑–∞–∫–∞–∑–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ–Ω–µ–Ω–∞. –¢–µ–∫—É—â–∞—è —Å—É–º–º–∞ –∑–∞–∫–∞–∑–∞: {user_profile.menu_total} —Ä—É–±.')

        else:
            update.message.reply_text('üî¥ –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É.')
            start_job_keyboard(update, context)


        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥–∏ –æ–∂–∏–¥–∞–Ω–∏—è
        context.user_data['waiting_for_menu_total'] = False
        context.user_data.pop('user_profile', None)
    if context.user_data.get('waiting_for_id'):
        user_id = update.message.text
        if not user_id.isdigit():
            update.message.reply_text('ID –∫–ª–∏–µ–Ω—Ç–∞ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —á–∏—Å–ª–æ–º, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–≤–æ–¥:')
            return
        try:
            user_profile = UserProfile.objects.get(external_id=user_id)
            vip_status = "VIP-–∫–ª–∏–µ–Ω—Ç ‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è" if user_profile.is_special else "–û–±—ã—á–Ω—ã–π –∫–ª–∏–µ–Ω—Ç ‚≠êÔ∏è"
            # –§–æ—Ä–º–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
            reply_message = f"–°—Ç–∞—Ç—É—Å: {vip_status}\n"
            reply_message += f"üÜî ID –∫–ª–∏–µ–Ω—Ç–∞: {user_profile.external_id}\n"
            reply_message += f"üì± –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {user_profile.phone_number}\n"
            reply_message += f"üìâ –¢–µ–∫—É—â–∞—è —Å–∫–∏–¥–∫–∞: {user_profile.discount_percentage}%\n"
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
            context.bot.send_message(chat_id=update.effective_chat.id, text=reply_message)

        except ObjectDoesNotExist:
            update.message.reply_text('–ö–ª–∏–µ–Ω—Ç —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º ID –Ω–µ –Ω–∞–π–¥–µ–Ω.')
            return

        context.user_data['waiting_for_id'] = False
        context.user_data['user_profile'] = user_profile
        context.bot.send_message(chat_id=update.effective_chat.id, text='–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É —Ç–µ–∫—É—â–µ–≥–æ –∑–∞–∫–∞–∑–∞ –∏–ª–∏\n '
                                                                        '–æ—Ç–º–µ–Ω–∏—Ç–µ –≤–≤–µ–¥–µ–Ω–Ω—É—é —Ä–∞–Ω–µ–µ —Å—É–º–º—É –∑–∞–∫–∞–∑–∞, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É\n'
                                                                        '"–£–¥–∞–ª–∏—Ç—å —Å—É–º–º—É —Ç–µ–∫—É—â–µ–≥–æ –∑–∞–∫–∞–∑–∞"')
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –æ–∂–∏–¥–∞–Ω–∏—è —Å—É–º–º—ã –º–µ–Ω—é
        context.user_data['waiting_for_menu_total'] = True

    elif context.user_data.get('waiting_for_menu_total'):
        menu_total = update.message.text

        if not re.match(r'^\d+\.\d{2}$', menu_total.replace(',', '.')):
            update.message.reply_text('–°—É–º–º–∞ –∑–∞–∫–∞–∑–∞ –¥–æ–ª–∂–Ω–∞ —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ä—É–±–ª–∏ –∏ –∫–æ–ø–µ–π–∫–∏ (0.00)')
            return

        user_profile = context.user_data.get('user_profile')
        if user_profile:
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â—É—é —Å—É–º–º—É –º–µ–Ω—é
            user_profile.previous_menu_total = user_profile.menu_total

            # –û–±–Ω–æ–≤–ª—è–µ–º —Å—É–º–º—É —Ç–µ–∫—É—â–µ–≥–æ –º–µ–Ω—é –≤ –ø—Ä–æ—Ñ–∏–ª–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user_profile.menu_total = '{:.2f}'.format(float(menu_total))
            user_profile.total_spent += decimal.Decimal(user_profile.menu_total)

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –º–µ–Ω—é
            user_profile.menu_total_timestamp = datetime.now()

            user_profile.save()

            update.message.reply_text(f'–°—É–º–º–∞ —Ç–µ–∫—É—â–µ–≥–æ –∑–∞–∫–∞–∑–∞ {user_profile.menu_total} —Ä—É–±. —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞.')
            vip_status = "VIP-–∫–ª–∏–µ–Ω—Ç ‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è" if user_profile.is_special else "–û–±—ã—á–Ω—ã–π –∫–ª–∏–µ–Ω—Ç ‚≠êÔ∏è"
            # –§–æ—Ä–º–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
            reply_message = f"–°—Ç–∞—Ç—É—Å: {vip_status}\n"
            reply_message += f"üÜî ID –∫–ª–∏–µ–Ω—Ç–∞: {user_profile.external_id}\n"
            reply_message += f"üì± –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {user_profile.phone_number}\n"
            reply_message += f"üìâ –¢–µ–∫—É—â–∞—è —Å–∫–∏–¥–∫–∞: {user_profile.discount_percentage}%\n"
            reply_message += f"üíµ –°—É–º–º–∞ —Ç–µ–∫—É—â–µ–≥–æ –∑–∞–∫–∞–∑–∞: {user_profile.menu_total} —Ä—É–±.\n"
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
            context.bot.send_message(chat_id=update.effective_chat.id, text=reply_message)
            start_job_keyboard(update, context)
        else:
            update.message.reply_text('üî¥ –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É.')

        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥–∏ –æ–∂–∏–¥–∞–Ω–∏—è
        context.user_data['waiting_for_menu_total'] = False
        context.user_data.pop('user_profile', None)

    else:
        start_job_keyboard(update, context)


def instruction(update, context):
    # –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª–Ω–æ–≥–æ –ø—É—Ç–∏ –∫ —Ñ–∞–π–ª—É —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–µ–π –≤ –ø–∞–ø–∫–µ media
    file_path = os.path.join('media', 'instructions', 'instruction.pdf')

    # –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –æ—Ç–∫—Ä—ã—Ç—å —Ñ–∞–π–ª
    with open(file_path, 'rb') as file:
        context.bot.send_document(
            chat_id=update.effective_chat.id,
            document=file,
            caption='–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–∫—Ä–æ–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞'
        )

class Command(BaseCommand):
    waiting_for_menu_total = False
    waiting_for_handle_user_id = False
    help = '–¢–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç'

    def handle(self, *args, **options):
        request = Request(
            connect_timeout=0.5,
            read_timeout=1.0,
        )
        bot = telegram.Bot(
            request=request,
            token=settings.TOKEN,
        )
        print(bot.get_me())

        updater = Updater(
            bot=bot,
            use_context=True,
        )

        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
        dp = updater.dispatcher
        dp.add_handler(CommandHandler('start_job', start_job))
        dp.add_handler(MessageHandler(Filters.text('üî≥ –û—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞—Ç—å QR-–∫–æ–¥'), scan_code))
        dp.add_handler(MessageHandler(Filters.text('üìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è'), instruction))
        dp.add_handler(MessageHandler(Filters.text('üëÜ –í–≤–µ—Å—Ç–∏ ID –∫–ª–∏–µ–Ω—Ç–∞'), add_menu_total_button))
        dp.add_handler(MessageHandler(Filters.text, handle_menu_total))
        dp.add_handler(MessageHandler(Filters.contact, handle_job_phone_number))

        updater.start_polling()
        updater.idle()

if __name__ == '__main__':
    command = Command()
    command.handle()