from django.core.management.base import BaseCommand
from django.conf import settings
from django.core.exceptions import ObjectDoesNotExist
import qrcode
import telegram
import os
from telegram import KeyboardButton, ReplyKeyboardMarkup, ReplyKeyboardRemove, InlineKeyboardMarkup, InlineKeyboardButton
from ...models import UserProfile, JobProfile
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters
from telegram.utils.request import Request
from io import BytesIO
from cryptography.hazmat.primitives import hashes
from cryptography.hazmat.primitives.asymmetric import padding, rsa
from .start_keyboard import start_keyboard, start_job_keyboard
import re
from datetime import datetime
import decimal
import cv2

"""
–ö–û–î –ö–õ–ò–ï–ù–¢–ê
"""

def start(update, context):
    context.bot_data['state'] = 'start'
    user = update.effective_user
    user_id = user.id

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    try:
        user_profile = UserProfile.objects.get(external_id=user_id)
        context.bot.send_message(chat_id=update.effective_chat.id,
                                 text='üü¢ –í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!')
    except UserProfile.DoesNotExist:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
        context.bot.send_message(chat_id=update.effective_chat.id, text='–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞', reply_markup=ReplyKeyboardRemove(remove_keyboard=True))
        context.bot.send_message(chat_id=update.effective_chat.id, text='–î–ª—è —ç—Ç–æ–≥–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä üì≤"', reply_markup=ReplyKeyboardMarkup([[KeyboardButton('üì≤ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä', request_contact=True)]], resize_keyboard=True, one_time_keyboard=True))
        return
    start_keyboard(update, context)

def handle_phone_number(update, context):
    state = context.bot_data.get('state')
    if state == 'start':
        user = update.effective_user
        user_id = user.id
        phone_number = update.effective_message.contact.phone_number

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        try:
            user_profile = UserProfile.objects.get(external_id=user_id)
            context.bot.send_message(chat_id=update.effective_chat.id, text='üü¢ –í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!')
        except UserProfile.DoesNotExist:

            # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user_profile = UserProfile.objects.create(external_id=user_id, phone_number=phone_number)
            # –°–æ–∑–¥–∞–µ–º QR-–∫–æ–¥
            qr_data = f'üÜî ID : {user_profile.external_id}' \
                      f'üìâ –°–∫–∏–¥–∫–∞: {user_profile.discount_percentage}%'

            # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–ª—é—á–µ–≤–æ–π –ø–∞—Ä—ã RSA
            private_key = rsa.generate_private_key(public_exponent=65537, key_size=2048)
            qr_code = create_signed_qr_code(user_profile, qr_data, private_key)
            user_profile.qr_code = qr_code  # –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º QR-–∫–æ–¥ –∫ –ø—Ä–æ—Ñ–∏–ª—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user_profile.save()

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º QR-–∫–æ–¥
            context.bot.send_message(chat_id=update.effective_chat.id, text='‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!')
            context.bot.send_message(chat_id=update.effective_chat.id, text=f'üÜî –í–∞—à ID: {user_profile.external_id}\nüî≥ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π QR-–∫–æ–¥: ',
                                     reply_markup=ReplyKeyboardRemove(remove_keyboard=True))
            context.bot.send_photo(chat_id=update.effective_chat.id, photo=open(qr_code, 'rb'))
            context.bot.send_message(chat_id=update.effective_chat.id, text='üìÅ –î–∞–Ω–Ω—ã–µ –±—É–¥—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã –≤–æ –≤–∫–ª–∞–¥–∫–µ "ü™™ –í–∏—Ä—Ç—É–∞–ª—å–Ω–∞—è –∫–∞—Ä—Ç–∞"')
            start_keyboard(update, context)
    elif state == 'start_job':
        user = update.effective_user
        user_id = user.id
        phone_number = update.effective_message.contact.phone_number

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        try:
            job_profile = JobProfile.objects.get(external_id=user_id)
            context.bot.send_message(chat_id=update.effective_chat.id, text='üü¢ –í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!')
        except JobProfile.DoesNotExist:
            # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            job_profile = JobProfile.objects.create(external_id=user_id, phone_number=phone_number)
            job_profile.save()

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–∞–±–æ—Ç–Ω–∏–∫–µ
            context.bot.send_message(chat_id=update.effective_chat.id, text='‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!')
            context.bot.send_message(chat_id=update.effective_chat.id, text=f'–í–∞—à ID: {job_profile.external_id}', reply_markup=ReplyKeyboardRemove(remove_keyboard=True))
            start_job_keyboard(update, context)
    else:
        pass
def create_signed_qr_code(user_profile, data, private_key,):

    # –°–æ–∑–¥–∞–Ω–∏–µ —Ü–∏—Ñ—Ä–æ–≤–æ–π –ø–æ–¥–ø–∏—Å–∏
    signature = private_key.sign(
        data.encode(),
        padding.PSS(
            mgf=padding.MGF1(hashes.SHA256()),
            salt_length=padding.PSS.MAX_LENGTH
        ),
        hashes.SHA256()
    )
    user_profile.signature = signature  # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ü–∏—Ñ—Ä–æ–≤—É—é –ø–æ–¥–ø–∏—Å—å –≤ –ø—Ä–æ—Ñ–∏–ª–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_profile.save()
    qr_data = f'{data}\n–¶–∏—Ñ—Ä–æ–≤–∞—è –ø–æ–¥–ø–∏—Å—å: {signature.hex()}'
    qr = qrcode.QRCode(version=1,error_correction=qrcode.constants.ERROR_CORRECT_L,box_size=10,border=4)
    qr.add_data(data)
    qr.make(fit=True)
    qr_img = qr.make_image(fill_color="black", back_color="white")
    qr_bytes = BytesIO()
    qr_img.save(qr_bytes, format='PNG')
    qr_bytes.seek(0)

    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–º—è —Ñ–∞–π–ª–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
    qr_code_filename = f"qr_code_{user_profile.external_id}.png"
    qr_code_path = os.path.join("media", "qr_codes", qr_code_filename)

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º QR-–∫–æ–¥ –≤ —Ñ–∞–π–ª
    with open(qr_code_path, 'wb') as f:
        f.write(qr_bytes.read())

    return qr_code_path

def virtual_card(update, context):
    user = update.effective_user
    user_id = user.id
    user_profile = UserProfile.objects.get(external_id=user_id)
    context.bot.send_message(chat_id=update.effective_chat.id, text='ü™™ –í–∞—à–∞ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–∞—è –∫–∞—Ä—Ç–∞:')

    # –°–æ–∑–¥–∞–µ–º QR-–∫–æ–¥
    qr_data = f'ID : {user_profile.external_id}\n –°–∫–∏–¥–∫–∞: {user_profile.discount_percentage}%\n'

    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–ª—é—á–µ–≤–æ–π –ø–∞—Ä—ã RSA
    private_key = rsa.generate_private_key(public_exponent=65537, key_size=2048)
    qr_code = create_signed_qr_code(user_profile, qr_data, private_key)
    user_profile.qr_code = qr_code  # –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º QR-–∫–æ–¥ –∫ –ø—Ä–æ—Ñ–∏–ª—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_profile.save()

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º QR-–∫–æ–¥
    context.bot.send_message(chat_id=update.effective_chat.id, text=f'üÜî –í–∞—à ID: {user_profile.external_id}\nüî≥ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π QR-–∫–æ–¥:')
    context.bot.send_photo(chat_id=update.effective_chat.id, photo=open(qr_code, 'rb'))
    start_keyboard(update, context)

def profile(update, context):
    user = update.effective_user
    user_id = user.id
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    try:
        user_profile = UserProfile.objects.get(external_id=user_id)
    except UserProfile.DoesNotExist:
        context.bot.send_message(chat_id=update.effective_chat.id, text='üî¥ –í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!')
        return

    message = ""
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å VIP
    if user_profile.is_special:
        message = "–°—Ç–∞—Ç—É—Å: VIP –∫–ª–∏–µ–Ω—Ç ‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è"
        message += "\nüìâ –í–∞—à–∞ —Å–∫–∏–¥–∫–∞ - 15%"
        message += f"\nüÜî –í–∞—à ID: {user_profile.external_id}"
        message += f"\nüí∞ –û–±—â–∞—è —Å—É–º–º–∞ –∑–∞–∫–∞–∑–æ–≤: {user_profile.total_spent} —Ä—É–±."
        message += f"\nüíµ –°—É–º–º–∞ —Ç–µ–∫—É—â–µ–≥–æ –∑–∞–∫–∞–∑–∞: {user_profile.menu_total} —Ä—É–±."
    else:
        discount_percentage = user_profile.calculate_discount_percentage()
        if discount_percentage == 10:
            message = f"C—Ç–∞—Ç—É—Å: –ü—Ä–∏–≤–∏–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–ª–∏–µ–Ω—Ç ‚≠êÔ∏è‚≠êÔ∏è"
            message += f"\nüÜî –í–∞—à ID: {user_profile.external_id}"
            message += "\nüìâ –í–∞—à–∞ —Å–∫–∏–¥–∫–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è - 10%"
            message += f"\nüí∞ –û–±—â–∞—è —Å—É–º–º–∞ –∑–∞–∫–∞–∑–æ–≤: {user_profile.total_spent} —Ä—É–±."
            message += f"\nüíµ –°—É–º–º–∞ —Ç–µ–∫—É—â–µ–≥–æ –∑–∞–∫–∞–∑–∞: {user_profile.menu_total} —Ä—É–±."
        else:
            message = f"C—Ç–∞—Ç—É—Å: –û–±—ã—á–Ω—ã–π –∫–ª–∏–µ–Ω—Ç ‚≠êÔ∏è"
            message += f"\nüÜî –í–∞—à ID: {user_profile.external_id}"
            message += f"\nüìâ –¢–µ–∫—É—â–∞—è —Å–∫–∏–¥–∫–∞: {discount_percentage}%"
            message += f"\nüí∞ –û–±—â–∞—è —Å—É–º–º–∞ –∑–∞–∫–∞–∑–æ–≤: {user_profile.total_spent} —Ä—É–±."
            message += f"\nüíµ –°—É–º–º–∞ —Ç–µ–∫—É—â–µ–≥–æ –∑–∞–∫–∞–∑–∞: {user_profile.menu_total} —Ä—É–±."

    if not user_profile.is_special and discount_percentage != 10:
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º, —Å–∫–æ–ª—å–∫–æ –µ—â–µ –Ω–∞–¥–æ –ø–æ—Ç—Ä–∞—Ç–∏—Ç—å –¥–ª—è –ø–æ–≤—ã—à–µ–Ω–∏—è —Å–∫–∏–¥–æ—á–Ω–æ–≥–æ –ø—Ä–æ—Ü–µ–Ω—Ç–∞
        thresholds = { 0: 0, 3: 1000, 5: 2000, 7: 3000, 10: 5000}
        for threshold, amount in thresholds.items():
            if user_profile.total_spent < amount:
                remaining_amount = amount - user_profile.total_spent
                message += f"\nüì£ –î–ª—è –ø–æ–≤—ã—à–µ–Ω–∏—è —Å–∫–∏–¥–∫–∏ –¥–æ {threshold}% –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ—Ç—Ä–∞—Ç–∏—Ç—å –µ—â–µ {remaining_amount} —Ä—É–±.\n"
                break
    context.bot.send_message(chat_id=update.effective_chat.id, text=message)

# –ü—É–±–ª–∏–∫–∞—Ü–∏—è –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π –Ω–∞ –Ω–µ–¥–µ–ª—é
def afisha(update, context):
    pass

# –°—Å—ã–ª–∫–∏ –Ω–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
def contacts(update, context):
    message = "üìö –ö–æ–Ω—Ç–∞–∫—Ç—ã:\n"
    message += "\\- üíª [–°–∞–π—Ç –∫–æ–º–ø–∞–Ω–∏–∏](http://www.example.com)\n"
    message += "\\- üìß [Email](mailto:info@example.com)\n"
    message += "\\- ‚òéÔ∏è –¢–µ–ª–µ—Ñ–æ–Ω: \\+79132222234\n"
    context.bot.send_message(chat_id=update.effective_chat.id, text=message, parse_mode='MarkdownV2')

"""
–ö–û–î –î–õ–Ø –†–ê–ë–û–¢–ù–ò–ö–ê
"""

def start_job(update, context):
    context.bot_data['state'] = 'start_job'
    user = update.effective_user
    user_id = user.id
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    try:
        job_profile = JobProfile.objects.get(external_id=user_id)
        context.bot.send_message(chat_id=update.effective_chat.id, text='–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!')
    except JobProfile.DoesNotExist:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
        context.bot.send_message(chat_id=update.effective_chat.id, text='–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞', reply_markup=ReplyKeyboardRemove(remove_keyboard=True))
        context.bot.send_message(chat_id=update.effective_chat.id, text='–î–ª—è —ç—Ç–æ–≥–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "üì≤ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä"', reply_markup=ReplyKeyboardMarkup([[KeyboardButton('üì≤ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä', request_contact=True)]], resize_keyboard=True, one_time_keyboard=True))
        return
    start_job_keyboard(update, context)

def scan_code(update, context):
    button_text = 'üî≥ –û—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞—Ç—å QR-–∫–æ–¥'
    button_url = 'https://www.online-qr-scanner.com/'
    keyboard = [[InlineKeyboardButton(button_text, url=button_url)]]
    reply_markup = InlineKeyboardMarkup(keyboard)
    update.message.reply_text('–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å —Å–∫–∞–Ω–µ—Ä QR-–∫–æ–¥–æ–≤:', reply_markup=reply_markup)

def add_menu_total_button(update, context):
    keyboard = [
        [KeyboardButton('‚ùå –£–¥–∞–ª–∏—Ç—å —Å—É–º–º—É —Ç–µ–∫—É—â–µ–≥–æ –∑–∞–∫–∞–∑–∞')],
        [KeyboardButton('‚Ü©Ô∏è –ù–∞–∑–∞–¥')]
    ]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    context.bot.send_message(chat_id=update.effective_chat.id, text='–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ üÜî –∫–ª–∏–µ–Ω—Ç–∞.', reply_markup=reply_markup)
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –æ–∂–∏–¥–∞–Ω–∏—è ID –∫–ª–∏–µ–Ω—Ç–∞
    context.user_data['waiting_for_id'] = True

def cancel_operation(update, context):
    start_job_keyboard(update, context)
    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥–∏ –æ–∂–∏–¥–∞–Ω–∏—è
    context.user_data['waiting_for_id'] = False
    context.user_data['waiting_for_menu_total'] = False

def handle_menu_total(update, context):
    if update.message.text == '‚ùå –£–¥–∞–ª–∏—Ç—å —Å—É–º–º—É —Ç–µ–∫—É—â–µ–≥–æ –∑–∞–∫–∞–∑–∞':
        user_profile = context.user_data.get('user_profile')
        if user_profile:
            # –í–æ–∑–≤—Ä–∞—Ç —Å—É–º–º—ã –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –º–µ–Ω—é –≤ —Ç–µ–∫—É—â—É—é —Å—É–º–º—É –º–µ–Ω—é
            user_profile.total_spent = user_profile.total_spent - decimal.Decimal(user_profile.menu_total)
            user_profile.menu_total = 0
            user_profile.save()
            update.message.reply_text(f'‚úÖ –°—É–º–º–∞ —Ç–µ–∫—É—â–µ–≥–æ –∑–∞–∫–∞–∑–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ–Ω–µ–Ω–∞. –¢–µ–∫—É—â–∞—è —Å—É–º–º–∞ –∑–∞–∫–∞–∑–∞: {user_profile.menu_total} —Ä—É–±.')
        else:
            update.message.reply_text('üî¥ –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É.')
            start_job_keyboard(update, context)

        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥–∏ –æ–∂–∏–¥–∞–Ω–∏—è
        context.user_data['waiting_for_menu_total'] = False
        context.user_data.pop('user_profile', None)
    if context.user_data.get('waiting_for_id'):
        user_id = update.message.text
        if not user_id.isdigit():
            update.message.reply_text('ID –∫–ª–∏–µ–Ω—Ç–∞ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —á–∏—Å–ª–æ–º, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–≤–æ–¥:')
            return
        try:
            user_profile = UserProfile.objects.get(external_id=user_id)
            vip_status = "VIP-–∫–ª–∏–µ–Ω—Ç ‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è" if user_profile.is_special else "–û–±—ã—á–Ω—ã–π –∫–ª–∏–µ–Ω—Ç ‚≠êÔ∏è"
            # –§–æ—Ä–º–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
            reply_message = f"–°—Ç–∞—Ç—É—Å: {vip_status}\n"
            reply_message += f"üÜî ID –∫–ª–∏–µ–Ω—Ç–∞: {user_profile.external_id}\n"
            reply_message += f"üì± –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {user_profile.phone_number}\n"
            reply_message += f"üìâ –¢–µ–∫—É—â–∞—è —Å–∫–∏–¥–∫–∞: {user_profile.discount_percentage}%\n"
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
            context.bot.send_message(chat_id=update.effective_chat.id, text=reply_message)

        except ObjectDoesNotExist:
            update.message.reply_text('–ö–ª–∏–µ–Ω—Ç —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º ID –Ω–µ –Ω–∞–π–¥–µ–Ω.')
            return

        context.user_data['waiting_for_id'] = False
        context.user_data['user_profile'] = user_profile
        context.bot.send_message(chat_id=update.effective_chat.id, text='–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ üëÜ —Å—É–º–º—É —Ç–µ–∫—É—â–µ–≥–æ –∑–∞–∫–∞–∑–∞\n '
                                                                        '–∏–ª–∏ –æ—Ç–º–µ–Ω–∏—Ç–µ –≤–≤–µ–¥–µ–Ω–Ω—É—é —Ä–∞–Ω–µ–µ —Å—É–º–º—É –∑–∞–∫–∞–∑–∞, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É\n'
                                                                        '"‚ùå –£–¥–∞–ª–∏—Ç—å —Å—É–º–º—É —Ç–µ–∫—É—â–µ–≥–æ –∑–∞–∫–∞–∑–∞"')
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –æ–∂–∏–¥–∞–Ω–∏—è —Å—É–º–º—ã –º–µ–Ω—é
        context.user_data['waiting_for_menu_total'] = True

    elif context.user_data.get('waiting_for_menu_total'):
        menu_total = update.message.text

        if not re.match(r'^\d+\.\d{2}$', menu_total.replace(',', '.')):
            update.message.reply_text('–°—É–º–º–∞ –∑–∞–∫–∞–∑–∞ –¥–æ–ª–∂–Ω–∞ —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ä—É–±–ª–∏ –∏ –∫–æ–ø–µ–π–∫–∏ (0.00)')
            return

        user_profile = context.user_data.get('user_profile')
        if user_profile:
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â—É—é —Å—É–º–º—É –º–µ–Ω—é
            user_profile.previous_menu_total = user_profile.menu_total

            # –û–±–Ω–æ–≤–ª—è–µ–º —Å—É–º–º—É —Ç–µ–∫—É—â–µ–≥–æ –º–µ–Ω—é –≤ –ø—Ä–æ—Ñ–∏–ª–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user_profile.menu_total = '{:.2f}'.format(float(menu_total))
            user_profile.total_spent += decimal.Decimal(user_profile.menu_total)

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –º–µ–Ω—é
            user_profile.menu_total_timestamp = datetime.now()
            user_profile.save()
            update.message.reply_text(f'–°—É–º–º–∞ —Ç–µ–∫—É—â–µ–≥–æ –∑–∞–∫–∞–∑–∞ {user_profile.menu_total} —Ä—É–±. —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞.')
            vip_status = "VIP-–∫–ª–∏–µ–Ω—Ç ‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è" if user_profile.is_special else "–û–±—ã—á–Ω—ã–π –∫–ª–∏–µ–Ω—Ç ‚≠êÔ∏è"
            # –§–æ—Ä–º–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
            reply_message = f"–°—Ç–∞—Ç—É—Å: {vip_status}\n"
            reply_message += f"üÜî ID –∫–ª–∏–µ–Ω—Ç–∞: {user_profile.external_id}\n"
            reply_message += f"üì± –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {user_profile.phone_number}\n"
            reply_message += f"üìâ –¢–µ–∫—É—â–∞—è —Å–∫–∏–¥–∫–∞: {user_profile.discount_percentage}%\n"
            reply_message += f"üíµ –°—É–º–º–∞ —Ç–µ–∫—É—â–µ–≥–æ –∑–∞–∫–∞–∑–∞: {user_profile.menu_total} —Ä—É–±.\n"
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
            context.bot.send_message(chat_id=update.effective_chat.id, text=reply_message)
            start_job_keyboard(update, context)
        else:
            update.message.reply_text('üî¥ –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É.')
        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥–∏ –æ–∂–∏–¥–∞–Ω–∏—è
        context.user_data['waiting_for_menu_total'] = False
        context.user_data.pop('user_profile', None)
    else:
        start_job_keyboard(update, context)

def instruction(update, context):
    # –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª–Ω–æ–≥–æ –ø—É—Ç–∏ –∫ —Ñ–∞–π–ª—É —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–µ–π –≤ –ø–∞–ø–∫–µ media
    file_path = os.path.join('media', 'instructions', 'instruction.pdf')

    # –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –æ—Ç–∫—Ä—ã—Ç—å —Ñ–∞–π–ª
    with open(file_path, 'rb') as file:
        context.bot.send_document(chat_id=update.effective_chat.id,document=file,caption='–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–∫—Ä–æ–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞')

class Command(BaseCommand):
    help = '–¢–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç'

    def handle(self, *args, **options):
        request = Request(connect_timeout=0.5,read_timeout=1.0)
        bot = telegram.Bot(request=request,token=settings.TOKEN)
        print(bot.get_me())
        updater = Updater(bot=bot,use_context=True)
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        dp = updater.dispatcher
        dp.add_handler(CommandHandler('start', start))
        dp.add_handler(MessageHandler(Filters.contact, handle_phone_number))
        dp.add_handler(MessageHandler(Filters.text('‚Äçüë®‚Äçüíº –ü—Ä–æ—Ñ–∏–ª—å'), profile))
        dp.add_handler(MessageHandler(Filters.text('üìÜ –ê—Ñ–∏—à–∞'), afisha))
        dp.add_handler(MessageHandler(Filters.text('üìó –ö–æ–Ω—Ç–∞–∫—Ç—ã'),contacts))
        dp.add_handler(MessageHandler(Filters.text('ü™™ –í–∏—Ä—Ç—É–∞–ª—å–Ω–∞—è –∫–∞—Ä—Ç–∞'),virtual_card))


        # –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ –¥–ª—è —Ä–∞–±–æ—Ç–Ω–∏–∫–∞
        dp.add_handler(CommandHandler('start_job', start_job))
        dp.add_handler(MessageHandler(Filters.text('üî≥ –û—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞—Ç—å QR-–∫–æ–¥'), scan_code))
        dp.add_handler(MessageHandler(Filters.text('üìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è'), instruction))
        dp.add_handler(MessageHandler(Filters.text('üëÜ –í–≤–µ—Å—Ç–∏ ID –∫–ª–∏–µ–Ω—Ç–∞'), add_menu_total_button))
        dp.add_handler(MessageHandler(Filters.text('‚Ü©Ô∏è –ù–∞–∑–∞–¥'), cancel_operation))
        dp.add_handler(MessageHandler(Filters.text, handle_menu_total))


        updater.start_polling()
        updater.idle()

if __name__ == '__main__':
    command = Command()
    command.handle()



